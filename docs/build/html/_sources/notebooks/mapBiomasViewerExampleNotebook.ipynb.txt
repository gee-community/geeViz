{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Visualizing MapBiomas Datasets\n",
    "\n",
    "* MapBiomas datasets are available as an EE asset as part of the awesome GEE community catelogue\n",
    "* See https://gee-community-catalog.org/projects/mapbiomas/ for source documentation\n",
    "\n",
    "\n",
    "\n",
    "Copyright 2024 Ian Housman\n",
    "\n",
    "Licensed under the Apache License, Version 2.0 (the \"License\");\n",
    "you may not use this file except in compliance with the License.\n",
    "You may obtain a copy of the License at\n",
    "\n",
    "   http://www.apache.org/licenses/LICENSE-2.0\n",
    "\n",
    "Unless required by applicable law or agreed to in writing, software\n",
    "distributed under the License is distributed on an \"AS IS\" BASIS,\n",
    "WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n",
    "See the License for the specific language governing permissions and\n",
    "limitations under the License.\n",
    "\n",
    "\n",
    "<p><a href=\"https://colab.research.google.com/github/gee-community/geeViz/blob/master/examples/mapBiomasViewerExampleNotebook.ipynb\" target=\"_parent\"><img alt=\"Open in Colab\" src=\"https://colab.research.google.com/assets/colab-badge.svg\"></a></p>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "done\n"
     ]
    }
   ],
   "source": [
    "try:\n",
    "    import  geeViz.geeView as geeView\n",
    "except:\n",
    "    !python -m pip install geeViz\n",
    "    import  geeViz.geeView as geeView\n",
    "\n",
    "ee = geeView.ee\n",
    "Map = geeView.Map\n",
    "\n",
    "print('done')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Make a basic viewer\n",
    "\n",
    "* Source information can be found here: https://gee-community-catalog.org/projects/mapbiomas\n",
    "* This example mosaics most available MapBiomas data\n",
    "* geeViz will automatically generate legends and query lookups using `\"autoViz\" : True` in the visualization params\n",
    "* Once the map loads, you can annimate the time series using the time lapse controls\n",
    "* Double-clicking on the map will show the values for the pixel you clicked on"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Setting click query crs to: EPSG:4326\n",
      "Setting click query scale to: 30\n",
      "{'type': 'Projection', 'crs': 'EPSG:4326', 'transform': [0.0002694945852358564, 0, -70.37258205346872, 0, -0.0002694945852358564, -8.701980157265806]}\n",
      "Adding layer: MapBiomas LULC\n",
      "Starting webmap\n",
      "Using default refresh token for geeView\n",
      "Local web server at: http://localhost:8001/geeView/ already serving.\n",
      "cwd a:\\GEE\\gee_py_modules_package\\geeViz\\examples\n",
      "geeView URL: http://localhost:8001/geeView/?projectID=lcms-292214&accessToken=ya29.a0AcM612wLjxt_EZcCDhYbwONFwy2sY8CLToCEtB9PT5a1aIN6W_ppVj617ezwUOfEI2Xj-aTsRKOXcyh9eSl74QOYea8NImQCeegyRrJMC33c3bQtHentt6m9FIxe0ZvH_Gfp6B8rBvbhvo1Oj1dE4B7nIMVmgGcmhiAboijwPGMaCgYKAQ4SARESFQHGX2MiyGQjtGYZm5wzmKXeYx8h0g0178\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "        <iframe\n",
       "            width=\"100%\"\n",
       "            height=\"525px\"\n",
       "            src=\"http://localhost:8001/geeView/?projectID=lcms-292214&accessToken=ya29.a0AcM612wLjxt_EZcCDhYbwONFwy2sY8CLToCEtB9PT5a1aIN6W_ppVj617ezwUOfEI2Xj-aTsRKOXcyh9eSl74QOYea8NImQCeegyRrJMC33c3bQtHentt6m9FIxe0ZvH_Gfp6B8rBvbhvo1Oj1dE4B7nIMVmgGcmhiAboijwPGMaCgYKAQ4SARESFQHGX2MiyGQjtGYZm5wzmKXeYx8h0g0178\"\n",
       "            frameborder=\"0\"\n",
       "            allowfullscreen\n",
       "            \n",
       "        ></iframe>\n",
       "        "
      ],
      "text/plain": [
       "<IPython.lib.display.IFrame at 0x14bce7db790>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Datasets available here: https://gee-community-catalog.org/projects/mapbiomas/\n",
    "Map.clearMap()\n",
    "# Specify which years to show\n",
    "years = list(range(1985, 2023 + 1))\n",
    "year_bandNames = [f\"classification_{yr}\" for yr in years]\n",
    "\n",
    "\n",
    "# Specify projection to use for zonal summaries and map querying\n",
    "# Be sure to leave one of scale or transform as None\n",
    "crs = \"EPSG:4326\"\n",
    "transform = None\n",
    "scale = 30\n",
    "\n",
    "\n",
    "Map.setQueryCRS(crs)\n",
    "if transform == None:\n",
    "    Map.setQueryScale(scale)\n",
    "else:\n",
    "    Map.setQueryTransform(transform)\n",
    "\n",
    "\n",
    "# Make an empty stack to handle missing years for some areas\n",
    "empty_stack = ee.ImageCollection([ee.Image().byte() for yb in year_bandNames]).toBands().rename(year_bandNames)\n",
    "\n",
    "\n",
    "# Bring in land use land cover datasets and mosaic them\n",
    "paths = [\n",
    "    \"projects/mapbiomas-public/assets/bolivia/collection2/mapbiomas_bolivia_collection2_integration_v1\",\n",
    "    \"projects/mapbiomas-public/assets/peru/collection2/mapbiomas_peru_collection2_integration_v1\",\n",
    "    \"projects/mapbiomas-public/assets/colombia/collection1/mapbiomas_colombia_collection1_integration_v1\",\n",
    "    \"projects/mapbiomas-public/assets/ecuador/collection1/mapbiomas_ecuador_collection1_integration_v1\",\n",
    "    \"projects/mapbiomas-public/assets/venezuela/collection1/mapbiomas_venezuela_collection1_integration_v1\",\n",
    "    \"projects/mapbiomas-public/assets/paraguay/collection1/mapbiomas_paraguay_collection1_integration_v1\",\n",
    "    \"projects/mapbiomas-workspace/public/collection8/mapbiomas_collection80_integration_v1\",\n",
    "    \"projects/mapbiomas-raisg/public/collection5/mapbiomas_raisg_panamazonia_collection5_integration_v1\",\n",
    "    \"projects/MapBiomas_Pampa/public/collection3/mapbiomas_uruguay_collection1_integration_v1\",\n",
    "    \"projects/mapbiomas-public/assets/chile/collection1/mapbiomas_chile_collection1_integration_v1\",\n",
    "    \"projects/mapbiomas-public/assets/argentina/collection1/mapbiomas_argentina_collection1_integration_v1\",\n",
    "]\n",
    "\n",
    "# Bring in each area and fill in empty years\n",
    "lulcImg = []\n",
    "for path in paths:\n",
    "    lulcImg.append(empty_stack.addBands(ee.Image(path).byte(), None, True))\n",
    "print(ee.Image(paths[0]).projection().getInfo())\n",
    "lulcImg = ee.ImageCollection(lulcImg).mosaic()\n",
    "\n",
    "# Bring in the names, values, and palette\n",
    "names = [\n",
    "    \"6. Not Observed\",\n",
    "    \"1.1. Forest Formation\",\n",
    "    \"1.2. Savanna Formation\",\n",
    "    \"1.3. Mangrove\",\n",
    "    \"1.5. Floodable Forest\",\n",
    "    \"3.3. Forest Plantation\",\n",
    "    \"2.1. Wetland\",\n",
    "    \"2.2. Grassland\",\n",
    "    \"2.6. Other Non Forest Formations\",\n",
    "    \"3.1 Pasture\",\n",
    "    \"(mesma cor de 39)\",\n",
    "    \"3.2.1.2. Sugar cane\",\n",
    "    \"3.4. Mosaic of Uses\",\n",
    "    \"(mesma cor de 25)\",\n",
    "    \"4.1. Beach, Dune and Sand Spot\",\n",
    "    \"4.2. Urban Area\",\n",
    "    \"4.4. Other non Vegetated Areas\",\n",
    "    \"2.4. Rocky Outcrop\",\n",
    "    \"4.3. Mining\",\n",
    "    \"5.2. Aquaculture\",\n",
    "    \"2.3. Hypersaline Tidal Flat\",\n",
    "    \"5.1. River, Lake and Ocean\",\n",
    "    \"x.x. Glacier\",\n",
    "    \"3.2.1.1. Soybean\",\n",
    "    \"3.2.1.3. Rice\",\n",
    "    \"3.2.1.5. Other Temporary Crops\",\n",
    "    \"3.2.2.1. Pastizal abierto\",\n",
    "    \"3.2.2.1. Pastizal cerrado\",\n",
    "    \"3.2.2.1. Pastizal disperso \",\n",
    "    \"3.2.2.1. Outros\",\n",
    "    \"3.2.2.1. Coffee\",\n",
    "    \"3.2.2.2. Citrus\",\n",
    "    \"3.2.2.4. Other Perennial Crops\",\n",
    "    \"1.4. Wooded Sandbank Vegetation\",\n",
    "    \"2.5. Herbaceous Sandbank Vegetation\",\n",
    "    \"0.0.0.0. Área urbana (definir cores)\",\n",
    "    \"0.0.0.0. Infraestrutura (definir cores)\",\n",
    "    \"0.0.0.0. Outras Áreas Urbanizadas (definir cores)\",\n",
    "    \"0.0.0.0. Reservatórios (UHE e Abastecimento) (definir cores)\",\n",
    "    \"0.0.0.0. Lagos artificiais e Açudes (definir cores)\",\n",
    "    \"0.0.0.0. Outros corpos d agua artificiais (definir cores)\",\n",
    "    \"0.0.0.0. Cultivo Simple (color temp)\",\n",
    "    \"0.0.0.0. Cultivo Múltiple (color temp)\",\n",
    "    \"0.0.0.0. Salares\",\n",
    "    \"3.2.1.4. Cotton\",\n",
    "]\n",
    "values = [\n",
    "    0,\n",
    "    3,\n",
    "    4,\n",
    "    5,\n",
    "    6,\n",
    "    9,\n",
    "    11,\n",
    "    12,\n",
    "    13,\n",
    "    15,\n",
    "    18,\n",
    "    20,\n",
    "    21,\n",
    "    22,\n",
    "    23,\n",
    "    24,\n",
    "    25,\n",
    "    29,\n",
    "    30,\n",
    "    31,\n",
    "    32,\n",
    "    33,\n",
    "    34,\n",
    "    39,\n",
    "    40,\n",
    "    41,\n",
    "    42,\n",
    "    43,\n",
    "    44,\n",
    "    45,\n",
    "    46,\n",
    "    47,\n",
    "    48,\n",
    "    49,\n",
    "    50,\n",
    "    51,\n",
    "    52,\n",
    "    53,\n",
    "    54,\n",
    "    55,\n",
    "    56,\n",
    "    57,\n",
    "    58,\n",
    "    61,\n",
    "    62,\n",
    "]\n",
    "palette = [\n",
    "    \"ffffff\",\n",
    "    \"1f8d49\",\n",
    "    \"7dc975\",\n",
    "    \"04381d\",\n",
    "    \"026975\",\n",
    "    \"7a6c00\",\n",
    "    \"519799\",\n",
    "    \"d6bc74\",\n",
    "    \"d89f5c\",\n",
    "    \"edde8e\",\n",
    "    \"f5b3c8\",\n",
    "    \"db7093\",\n",
    "    \"ffefc3\",\n",
    "    \"db4d4f\",\n",
    "    \"ffa07a\",\n",
    "    \"d4271e\",\n",
    "    \"db4d4f\",\n",
    "    \"ffaa5f\",\n",
    "    \"9c0027\",\n",
    "    \"091077\",\n",
    "    \"fc8114\",\n",
    "    \"2532e4\",\n",
    "    \"93dfe6\",\n",
    "    \"f5b3c8\",\n",
    "    \"c71585\",\n",
    "    \"f54ca9\",\n",
    "    \"cca0d4\",\n",
    "    \"dbd26b\",\n",
    "    \"807a40\",\n",
    "    \"e04cfa\",\n",
    "    \"d68fe2\",\n",
    "    \"9932cc\",\n",
    "    \"e6ccff\",\n",
    "    \"02d659\",\n",
    "    \"ad5100\",\n",
    "    \"000000\",\n",
    "    \"000000\",\n",
    "    \"000000\",\n",
    "    \"000000\",\n",
    "    \"000000\",\n",
    "    \"000000\",\n",
    "    \"CC66FF\",\n",
    "    \"FF6666\",\n",
    "    \"f5d5d5\",\n",
    "    \"ff69b4\",\n",
    "]\n",
    "\n",
    "# View palettes source here:\n",
    "# var palettes = require('users/mapbiomas/modules:Palettes.js');\n",
    "\n",
    "# Convert image to image collection\n",
    "bns = lulcImg.bandNames()\n",
    "\n",
    "out_band_name = \"lulc\"\n",
    "\n",
    "\n",
    "# Function to convert a given band into a time-enabled image object\n",
    "def setupLulc(bn):\n",
    "    bn = ee.String(bn)\n",
    "    yr = ee.Number.parse(ee.String(bn).split(\"_\").get(1))\n",
    "    img = lulcImg.select(bn).rename([out_band_name]).set(\"system:time_start\", ee.Date.fromYMD(yr, 6, 1).millis())\n",
    "    img = img.set(\n",
    "        {\n",
    "            f\"{out_band_name}_class_names\": names,\n",
    "            f\"{out_band_name}_class_palette\": palette,\n",
    "            f\"{out_band_name}_class_values\": values,\n",
    "        }\n",
    "    )\n",
    "    return img\n",
    "\n",
    "\n",
    "# Convert the image stack into an image collection\n",
    "lulcC = ee.ImageCollection(bns.map(setupLulc))\n",
    "\n",
    "\n",
    "# Add the collection to the map\n",
    "Map.addLayer(lulcC, { \"autoViz\": True}, \"MapBiomas LULC\")\n",
    "\n",
    "\n",
    "# Set up the map\n",
    "Map.turnOnInspector()\n",
    "Map.setCenter(-62.8, -3, 4)\n",
    "Map.view()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Calculating and Exporting Statistics¶\n",
    "\n",
    "* geeViz streamlines calculating and exporting statistics \n",
    "* Once the map loads, you can use the `TOOLS` under `Area Tools` to generate charts\n",
    "* Charts can be downloaded as a PNG and the underlying data can be downloaded as a CSV"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Adding layer: MapBiomas LULC\n",
      "Adding layer: Global Country Boundaries\n",
      "Starting webmap\n",
      "Using default refresh token for geeView\n",
      "Local web server at: http://localhost:8001/geeView/ already serving.\n",
      "cwd a:\\GEE\\gee_py_modules_package\\geeViz\\examples\n",
      "geeView URL: http://localhost:8001/geeView/?projectID=lcms-292214&accessToken=ya29.a0AcM612zj-oux3lveCsO3NUHU-4SFKq0Nqn2lA6T5-GJx3nyfRAFzT4k__RUKy6-mt_AeNs4WZS1F4z671DM4XvbiOLqZyGAyHPLit9lcgVsMcysXeFv0Od1f4_qzp8HXY28ocvJOIACjVYCXjvgD7KdnWtJhjLLwfoRPC8aUcocaCgYKAY0SARESFQHGX2MiLuTX9wEMFB6a5vmZAEUHIg0178\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "        <iframe\n",
       "            width=\"100%\"\n",
       "            height=\"525px\"\n",
       "            src=\"http://localhost:8001/geeView/?projectID=lcms-292214&accessToken=ya29.a0AcM612zj-oux3lveCsO3NUHU-4SFKq0Nqn2lA6T5-GJx3nyfRAFzT4k__RUKy6-mt_AeNs4WZS1F4z671DM4XvbiOLqZyGAyHPLit9lcgVsMcysXeFv0Od1f4_qzp8HXY28ocvJOIACjVYCXjvgD7KdnWtJhjLLwfoRPC8aUcocaCgYKAY0SARESFQHGX2MiLuTX9wEMFB6a5vmZAEUHIg0178\"\n",
       "            frameborder=\"0\"\n",
       "            allowfullscreen\n",
       "            \n",
       "        ></iframe>\n",
       "        "
      ],
      "text/plain": [
       "<IPython.lib.display.IFrame at 0x14bce570250>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "Map.clearMapLayers()\n",
    "Map.turnOffLayersWhenTimeLapseIsOn = False # Set this to False to avoid layers automatically turning off when a time lapse is turned on\n",
    "\n",
    "Map.addLayer(lulcC, {'autoViz':True,'years':years,'canAreaChart':True,'areaChartParams':{'crs':crs,'scale':scale,'transform':transform}}, \"MapBiomas LULC\" )\n",
    "\n",
    "# Add country boundaries as a layer to select with\n",
    "countries = ee.FeatureCollection(\"FAO/GAUL_SIMPLIFIED_500m/2015/level0\")\n",
    "Map.addSelectLayer(countries, {}, \"Global Country Boundaries\")\n",
    "\n",
    "Map.turnOnAutoAreaCharting()\n",
    "Map.view()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Create Sankey Charts\n",
    "\n",
    "* You can also create Sankey charts and download transition matrices with geeViz\n",
    "* Once the map loads, you can use the `TOOLS` under `Area Tools` to generate charts\n",
    "* You can customize the years to include in the sankey charts under the `Area Tools Parameters` -> `Transition Charting Periods`\n",
    "* Charts can be downloaded as a PNG and the underlying data can be downloaded as a CSV"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Adding layer: MapBiomas LULC\n",
      "Adding layer: Global Country Boundaries\n",
      "Starting webmap\n",
      "Using default refresh token for geeView\n",
      "Local web server at: http://localhost:8001/geeView/ already serving.\n",
      "cwd a:\\GEE\\gee_py_modules_package\\geeViz\\examples\n",
      "geeView URL: http://localhost:8001/geeView/?projectID=lcms-292214&accessToken=ya29.a0AcM612yFBTw-c0i9oBGLnesqa2et_a-LClTLHIirCloc44PYoodXq4IWLi5_v670d2N-CZrBilqgaG1vN3d54Vd5uENVjIxLVJmTO3VuO0kIHAY6FqGoy1tVPotAtN0IENr1FOzRhh7A70xqYK7cbccfNhFS90GSyT7Ys_eS8u4aCgYKATQSARESFQHGX2Mip-lq39gSIPfX3pj1U8FvMg0178\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "        <iframe\n",
       "            width=\"100%\"\n",
       "            height=\"525px\"\n",
       "            src=\"http://localhost:8001/geeView/?projectID=lcms-292214&accessToken=ya29.a0AcM612yFBTw-c0i9oBGLnesqa2et_a-LClTLHIirCloc44PYoodXq4IWLi5_v670d2N-CZrBilqgaG1vN3d54Vd5uENVjIxLVJmTO3VuO0kIHAY6FqGoy1tVPotAtN0IENr1FOzRhh7A70xqYK7cbccfNhFS90GSyT7Ys_eS8u4aCgYKATQSARESFQHGX2Mip-lq39gSIPfX3pj1U8FvMg0178\"\n",
       "            frameborder=\"0\"\n",
       "            allowfullscreen\n",
       "            \n",
       "        ></iframe>\n",
       "        "
      ],
      "text/plain": [
       "<IPython.lib.display.IFrame at 0x14bcd4c98d0>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "Map.clearMapLayers()\n",
    "\n",
    "Map.addTimeLapse(lulcC, {'autoViz':True,'years':years,'canAreaChart':True,'areaChartParams':{'line':True,'sankey':True,'crs':crs,'transform':transform,'scale':scale}}, 'MapBiomas LULC' )\n",
    "\n",
    "countries = ee.FeatureCollection(\"FAO/GAUL_SIMPLIFIED_500m/2015/level0\")\n",
    "Map.addSelectLayer(countries, {}, \"Global Country Boundaries\")\n",
    "\n",
    "Map.turnOnAutoAreaCharting()\n",
    "Map.view()"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
