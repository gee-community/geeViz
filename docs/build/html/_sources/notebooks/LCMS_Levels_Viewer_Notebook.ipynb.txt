{
  "cells": [
    {
      "attachments": {},
      "cell_type": "markdown",
      "id": "bbe2fd7d",
      "metadata": {},
      "source": [
        "# Learn to crosswalk LCMS datasets to different levels\n",
        "\n",
        "* Currently, all LCMS deliverables are delivered at the highest level (largest number of classes)\n",
        "* This notebook facilitates crosswalking of LCMS deliverables to different levels\n",
        "* Lower levels provide greater accuracy, while higher levels provide greater thematic detail\n",
        "* Use this notebook to find the level that suits your data needs and tolerance for map error\n",
        "\n",
        "Copyright 2025 Ian Housman\n",
        "\n",
        "Licensed under the Apache License, Version 2.0 (the \"License\");\n",
        "you may not use this file except in compliance with the License.\n",
        "You may obtain a copy of the License at\n",
        "\n",
        "   http://www.apache.org/licenses/LICENSE-2.0\n",
        "\n",
        "Unless required by applicable law or agreed to in writing, software\n",
        "distributed under the License is distributed on an \"AS IS\" BASIS,\n",
        "WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n",
        "See the License for the specific language governing permissions and\n",
        "limitations under the License.\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "[![github](https://img.shields.io/badge/-see%20sources-white?logo=github&labelColor=555)](https://github.com/gee-community/geeviz/blob/master/examples/LCMS_Levels_Viewer_Notebook.ipynb) \n",
        "[![github](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/gee-community/geeViz/blob/master/examples/LCMS_Levels_Viewer_Notebook.ipynb)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "id": "96b6b059",
      "metadata": {},
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Initializing GEE\n",
            "Successfully initialized\n",
            "Done\n"
          ]
        }
      ],
      "source": [
        "#Boiler plate\n",
        "#Import modules\n",
        "\n",
        "try:\n",
        "    from  geeViz.geeView import *\n",
        "except:\n",
        "    !python -m pip install geeViz\n",
        "    from  geeViz.geeView import *\n",
        "\n",
        "import lcmsLevelLookup as ll\n",
        "import pandas as pd\n",
        "import numpy as np\n",
        "from IPython.display import Markdown\n",
        "print('Done')"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "e1f868b5",
      "metadata": {},
      "source": [
        "## First, we'll take a look at the various levels for LCMS data\n",
        "\n",
        "* This is a standard way of crosswalking LCMS data to an appropriate level of thematic detail for your needs\n",
        "\n",
        "* You can also crosswalk LCMS data in many other ways by combining different sets of Change, Land Cover, and Land Use classes in various manners\n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 4,
      "metadata": {},
      "outputs": [
        {
          "data": {
            "text/markdown": [
              "<h1>Land Cover Levels</h1>"
            ],
            "text/plain": [
              "<IPython.core.display.Markdown object>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        },
        {
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Land Cover Level 4</th>\n",
              "      <th>Land Cover Level 3</th>\n",
              "      <th>Land Cover Level 2</th>\n",
              "      <th>Land Cover Level 1</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <td>Tree</td>\n",
              "      <td>Tree</td>\n",
              "      <td>Tree Vegetated</td>\n",
              "      <td>Vegetated</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <td>Tall Shrub &amp; Tree Mix (SEAK Only)</td>\n",
              "      <td>Tree</td>\n",
              "      <td>Tree Vegetated</td>\n",
              "      <td>Vegetated</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <td>Shrub &amp; Tree Mix</td>\n",
              "      <td>Tree</td>\n",
              "      <td>Tree Vegetated</td>\n",
              "      <td>Vegetated</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <td>Grass/Forb/Herb &amp; Tree Mix</td>\n",
              "      <td>Tree</td>\n",
              "      <td>Tree Vegetated</td>\n",
              "      <td>Vegetated</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <td>Barren &amp; Tree Mix</td>\n",
              "      <td>Tree</td>\n",
              "      <td>Tree Vegetated</td>\n",
              "      <td>Vegetated</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <td>Tall Shrub (SEAK Only)</td>\n",
              "      <td>Shrub</td>\n",
              "      <td>Non-Tree Vegetated</td>\n",
              "      <td>Vegetated</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <td>Shrub</td>\n",
              "      <td>Shrub</td>\n",
              "      <td>Non-Tree Vegetated</td>\n",
              "      <td>Vegetated</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <td>Grass/Forb/Herb &amp; Shrub Mix</td>\n",
              "      <td>Shrub</td>\n",
              "      <td>Non-Tree Vegetated</td>\n",
              "      <td>Vegetated</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <td>Barren &amp; Shrub Mix</td>\n",
              "      <td>Shrub</td>\n",
              "      <td>Non-Tree Vegetated</td>\n",
              "      <td>Vegetated</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <td>Grass/Forb/Herb</td>\n",
              "      <td>Grass/Forb/Herb</td>\n",
              "      <td>Non-Tree Vegetated</td>\n",
              "      <td>Vegetated</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <td>Barren &amp; Grass/Forb/Herb Mix</td>\n",
              "      <td>Grass/Forb/Herb</td>\n",
              "      <td>Non-Tree Vegetated</td>\n",
              "      <td>Vegetated</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <td>Barren or Impervious</td>\n",
              "      <td>Barren or Impervious</td>\n",
              "      <td>Non-Vegetated</td>\n",
              "      <td>Non-Vegetated</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <td>Snow or Ice</td>\n",
              "      <td>Snow or Ice</td>\n",
              "      <td>Non-Vegetated</td>\n",
              "      <td>Non-Vegetated</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <td>Water</td>\n",
              "      <td>Water</td>\n",
              "      <td>Non-Vegetated</td>\n",
              "      <td>Non-Vegetated</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <td>Non-Processing Area Mask</td>\n",
              "      <td>Non-Processing Area Mask</td>\n",
              "      <td>Non-Processing Area Mask</td>\n",
              "      <td>Non-Processing Area Mask</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "                 Land Cover Level 4        Land Cover Level 3  \\\n",
              "                               Tree                      Tree   \n",
              "  Tall Shrub & Tree Mix (SEAK Only)                      Tree   \n",
              "                   Shrub & Tree Mix                      Tree   \n",
              "         Grass/Forb/Herb & Tree Mix                      Tree   \n",
              "                  Barren & Tree Mix                      Tree   \n",
              "             Tall Shrub (SEAK Only)                     Shrub   \n",
              "                              Shrub                     Shrub   \n",
              "        Grass/Forb/Herb & Shrub Mix                     Shrub   \n",
              "                 Barren & Shrub Mix                     Shrub   \n",
              "                    Grass/Forb/Herb           Grass/Forb/Herb   \n",
              "       Barren & Grass/Forb/Herb Mix           Grass/Forb/Herb   \n",
              "               Barren or Impervious      Barren or Impervious   \n",
              "                        Snow or Ice               Snow or Ice   \n",
              "                              Water                     Water   \n",
              "           Non-Processing Area Mask  Non-Processing Area Mask   \n",
              "\n",
              "        Land Cover Level 2        Land Cover Level 1  \n",
              "            Tree Vegetated                 Vegetated  \n",
              "            Tree Vegetated                 Vegetated  \n",
              "            Tree Vegetated                 Vegetated  \n",
              "            Tree Vegetated                 Vegetated  \n",
              "            Tree Vegetated                 Vegetated  \n",
              "        Non-Tree Vegetated                 Vegetated  \n",
              "        Non-Tree Vegetated                 Vegetated  \n",
              "        Non-Tree Vegetated                 Vegetated  \n",
              "        Non-Tree Vegetated                 Vegetated  \n",
              "        Non-Tree Vegetated                 Vegetated  \n",
              "        Non-Tree Vegetated                 Vegetated  \n",
              "             Non-Vegetated             Non-Vegetated  \n",
              "             Non-Vegetated             Non-Vegetated  \n",
              "             Non-Vegetated             Non-Vegetated  \n",
              "  Non-Processing Area Mask  Non-Processing Area Mask  "
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        },
        {
          "data": {
            "text/markdown": [
              "<h1>Change Levels</h1>"
            ],
            "text/plain": [
              "<IPython.core.display.Markdown object>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        },
        {
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Change Level 3</th>\n",
              "      <th>Change Level 2</th>\n",
              "      <th>Change Level 1</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <td>Stable</td>\n",
              "      <td>Stable</td>\n",
              "      <td>Stable</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <td>Gain</td>\n",
              "      <td>Gain</td>\n",
              "      <td>Stable</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <td>Slow Loss</td>\n",
              "      <td>Loss</td>\n",
              "      <td>Loss</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <td>Fast Loss</td>\n",
              "      <td>Loss</td>\n",
              "      <td>Loss</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <td>Non-Processing Area Mask</td>\n",
              "      <td>Non-Processing Area Mask</td>\n",
              "      <td>Non-Processing Area Mask</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "            Change Level 3            Change Level 2            Change Level 1\n",
              "                    Stable                    Stable                    Stable\n",
              "                      Gain                      Gain                    Stable\n",
              "                 Slow Loss                      Loss                      Loss\n",
              "                 Fast Loss                      Loss                      Loss\n",
              "  Non-Processing Area Mask  Non-Processing Area Mask  Non-Processing Area Mask"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        },
        {
          "data": {
            "text/markdown": [
              "<h1>Land Use Levels</h1>"
            ],
            "text/plain": [
              "<IPython.core.display.Markdown object>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        },
        {
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Land Use Level 3</th>\n",
              "      <th>Land Use Level 2</th>\n",
              "      <th>Land Use Level 1</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <td>Agriculture</td>\n",
              "      <td>Agriculture</td>\n",
              "      <td>Anthropogenic</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <td>Developed</td>\n",
              "      <td>Developed</td>\n",
              "      <td>Anthropogenic</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <td>Forest</td>\n",
              "      <td>Forest</td>\n",
              "      <td>Non-Anthropogenic</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <td>Non-Forest Wetland</td>\n",
              "      <td>Other</td>\n",
              "      <td>Non-Anthropogenic</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <td>Other</td>\n",
              "      <td>Other</td>\n",
              "      <td>Non-Anthropogenic</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <td>Rangeland or Pasture</td>\n",
              "      <td>Rangeland or Pasture</td>\n",
              "      <td>Non-Anthropogenic</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th></th>\n",
              "      <td>Non-Processing Area Mask</td>\n",
              "      <td>Non-Processing Area Mask</td>\n",
              "      <td>Non-Processing Area Mask</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "          Land Use Level 3          Land Use Level 2          Land Use Level 1\n",
              "               Agriculture               Agriculture             Anthropogenic\n",
              "                 Developed                 Developed             Anthropogenic\n",
              "                    Forest                    Forest         Non-Anthropogenic\n",
              "        Non-Forest Wetland                     Other         Non-Anthropogenic\n",
              "                     Other                     Other         Non-Anthropogenic\n",
              "      Rangeland or Pasture      Rangeland or Pasture         Non-Anthropogenic\n",
              "  Non-Processing Area Mask  Non-Processing Area Mask  Non-Processing Area Mask"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        }
      ],
      "source": [
        "# Bring in the lookup dictionary and convert it into a Pandas dataframe for easy viewing\n",
        "products = list(ll.all_lookup.keys())\n",
        "\n",
        "\n",
        "for product in products:\n",
        "    product_title = product.replace('_',' ')\n",
        "    product_lookup = ll.all_lookup[product]\n",
        "    available_levels = ll.product_levels[product]\n",
        "    \n",
        "    highest_level = max(available_levels)\n",
        "  \n",
        "    \n",
        "    highest_level = [n for n in product_lookup.keys() if len(n.split(\".\")) == highest_level]\n",
        "    table = [highest_level]\n",
        "\n",
        "    for level in available_levels[1:]:\n",
        "        table.append(['.'.join(l.split('.')[:level]) for l in highest_level])\n",
        "    \n",
        "    table = np.transpose(table)\n",
        "  \n",
        "    out_table = [[product_lookup[v][2] for v in r] for r in table]\n",
        "    df = pd.DataFrame(out_table)\n",
        "    blankIndex=[''] * len(df)\n",
        "    df.index=blankIndex\n",
        "    df.columns = [f'{product_title} Level {l}' for l in available_levels]\n",
        "\n",
        "    display(Markdown(f'<h1>{product_title} Levels</h1>'))\n",
        "    display(df)"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "0dbfdb6d",
      "metadata": {},
      "source": [
        "## Learn how to crosswalk and symbolize LCMS products at a specific level\n",
        "\n",
        "* You need to crosswalk (remap) values and provide the relevant symbology to render the maps properly\n",
        "* The code below will show different products and levels and their respective crosswalk (remap) class numbers and symbology properties"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 7,
      "id": "27436fd1",
      "metadata": {},
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Product: Change Level: 3 {'remap_from': [1, 2, 3, 4, 5], 'remap_to': [1, 2, 3, 4, 5], 'viz_dict': {'Change_class_names': ['Stable', 'Gain', 'Slow Loss', 'Fast Loss', 'Non-Processing Area Mask'], 'Change_class_palette': ['3D4551', '00A398', 'F39268', 'D54309', '1B1716'], 'Change_class_values': [1, 4, 2, 3, 5]}}\n",
            "Product: Change Level: 2 {'remap_from': [1, 2, 3, 4, 5], 'remap_to': [1, 3, 3, 2, 4], 'viz_dict': {'Change_class_names': ['Stable', 'Gain', 'Loss', 'Non-Processing Area Mask'], 'Change_class_palette': ['3D4551', '00A398', 'D54309', '1B1716'], 'Change_class_values': [1, 2, 3, 4]}}\n",
            "Product: Change Level: 1 {'remap_from': [1, 2, 3, 4, 5], 'remap_to': [1, 2, 2, 1, 3], 'viz_dict': {'Change_class_names': ['Stable', 'Loss', 'Non-Processing Area Mask'], 'Change_class_palette': ['3D4551', 'D54309', '1B1716'], 'Change_class_values': [1, 2, 3]}}\n",
            "Product: Land Cover Level: 4 {'remap_from': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], 'remap_to': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], 'viz_dict': {'Land_Cover_class_names': ['Tree', 'Tall Shrub & Tree Mix (SEAK Only)', 'Shrub & Tree Mix', 'Grass/Forb/Herb & Tree Mix', 'Barren & Tree Mix', 'Tall Shrub (SEAK Only)', 'Shrub', 'Grass/Forb/Herb & Shrub Mix', 'Barren & Shrub Mix', 'Grass/Forb/Herb', 'Barren & Grass/Forb/Herb Mix', 'Barren or Impervious', 'Snow or Ice', 'Water', 'Non-Processing Area Mask'], 'Land_Cover_class_palette': ['004E2B', '009344', '61BB46', 'E5E98A', '8B8560', 'CAFD4B', 'F89A1C', '8FA55F', 'BEBB8E', 'FFFF00', 'DDB925', 'D4D4D3', 'E4F5FD', '00B6F0', '1B1716'], 'Land_Cover_class_values': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]}}\n",
            "Product: Land Cover Level: 3 {'remap_from': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], 'remap_to': [1, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 5, 6, 7], 'viz_dict': {'Land_Cover_class_names': ['Tree', 'Shrub', 'Grass/Forb/Herb', 'Barren or Impervious', 'Snow or Ice', 'Water', 'Non-Processing Area Mask'], 'Land_Cover_class_palette': ['004E2B', 'F89A1C', 'E5E98A', 'D4D4D3', 'E4F5FD', '00B6F0', '1B1716'], 'Land_Cover_class_values': [1, 2, 3, 4, 5, 6, 7]}}\n",
            "Product: Land Cover Level: 2 {'remap_from': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], 'remap_to': [1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 3, 3, 3, 4], 'viz_dict': {'Land_Cover_class_names': ['Tree Vegetated', 'Non-Tree Vegetated', 'Non-Vegetated', 'Non-Processing Area Mask'], 'Land_Cover_class_palette': ['004E2B', '8DA463', 'D4D4D3', '1B1716'], 'Land_Cover_class_values': [1, 2, 3, 4]}}\n",
            "Product: Land Cover Level: 1 {'remap_from': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], 'remap_to': [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 3], 'viz_dict': {'Land_Cover_class_names': ['Vegetated', 'Non-Vegetated', 'Non-Processing Area Mask'], 'Land_Cover_class_palette': ['61BB46', '58646E', '1B1716'], 'Land_Cover_class_values': [1, 2, 3]}}\n",
            "Product: Land Use Level: 3 {'remap_from': [1, 2, 3, 4, 5, 6, 7], 'remap_to': [1, 2, 3, 4, 5, 6, 7], 'viz_dict': {'Land_Use_class_names': ['Agriculture', 'Developed', 'Forest', 'Non-Forest Wetland', 'Other', 'Rangeland or Pasture', 'Non-Processing Area Mask'], 'Land_Use_class_palette': ['FBFF97', 'E6558B', '004E2B', '36C5B2', 'D4D4D3', 'A6976A', '1B1716'], 'Land_Use_class_values': [1, 2, 3, 4, 5, 6, 7]}}\n",
            "Product: Land Use Level: 2 {'remap_from': [1, 2, 3, 4, 5, 6, 7], 'remap_to': [1, 2, 3, 4, 4, 5, 6], 'viz_dict': {'Land_Use_class_names': ['Agriculture', 'Developed', 'Forest', 'Other', 'Rangeland or Pasture', 'Non-Processing Area Mask'], 'Land_Use_class_palette': ['FBFF97', 'E6558B', '004E2B', 'D4D4D3', 'A6976A', '1B1716'], 'Land_Use_class_values': [1, 2, 3, 4, 5, 6]}}\n",
            "Product: Land Use Level: 1 {'remap_from': [1, 2, 3, 4, 5, 6, 7], 'remap_to': [1, 1, 2, 2, 2, 2, 3], 'viz_dict': {'Land_Use_class_names': ['Anthropogenic', 'Non-Anthropogenic', 'Non-Processing Area Mask'], 'Land_Use_class_palette': ['FF9EAB', '004E2B', '1B1716'], 'Land_Use_class_values': [1, 2, 3]}}\n"
          ]
        }
      ],
      "source": [
        "for product in ll.product_levels.keys():\n",
        "    product_title = product.replace('_',' ')\n",
        "    for level in ll.product_levels[product]:\n",
        "        remap_dict = ll.getLevelNRemap(level, bandName=product)\n",
        "        print('Product:',product_title, 'Level:',level, remap_dict)"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "010bd5c9",
      "metadata": {},
      "source": [
        "## Crosswalk and visualize all LCMS products and levels\n",
        "\n",
        "* This will apply the crosswalk (remap) and update the symbology for all products and levels\n",
        "* A map viewer will then open to visualize the resulting layers"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 6,
      "id": "d25f5f74",
      "metadata": {
        "scrolled": false
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Adding layer: Change Level 3\n",
            "Adding layer: Change Level 2\n",
            "Adding layer: Change Level 1\n",
            "Adding layer: Land_Cover Level 4\n",
            "Adding layer: Land_Cover Level 3\n",
            "Adding layer: Land_Cover Level 2\n",
            "Adding layer: Land_Cover Level 1\n",
            "Adding layer: Land_Use Level 3\n",
            "Adding layer: Land_Use Level 2\n",
            "Adding layer: Land_Use Level 1\n",
            "Starting webmap\n",
            "Using default refresh token for geeView\n",
            "Local web server at: http://localhost:8001/geeView/ already serving.\n",
            "cwd a:\\GEE\\gee_py_modules_package\\geeViz\\examples\n",
            "geeView URL: http://localhost:8001/geeView/?projectID=nlcd-tcc&accessToken=ya29.a0ARW5m752rFVTY4szOYSsHYs8DpQqRhLpfvS8QTlFglscbV_1b8h88V77_rFcKKIJXTHFeVO2ZgnPGwCekjT89ShQV1cXAsPJ2Pe9qAWg001xzaEWx0EJJp0viiWUi8fR6Kjoj6TsNPghCQyvdiRIPG1n3q-GZ3dFBzLQa-s9kAaCgYKAakSARESFQHGX2Mi2FrzTGrHW1wHNAd76hnHHg0177&accessTokenCreationTime=1736374816159\n"
          ]
        },
        {
          "data": {
            "text/html": [
              "\n",
              "        <iframe\n",
              "            width=\"100%\"\n",
              "            height=\"525px\"\n",
              "            src=\"http://localhost:8001/geeView/?projectID=nlcd-tcc&accessToken=ya29.a0ARW5m752rFVTY4szOYSsHYs8DpQqRhLpfvS8QTlFglscbV_1b8h88V77_rFcKKIJXTHFeVO2ZgnPGwCekjT89ShQV1cXAsPJ2Pe9qAWg001xzaEWx0EJJp0viiWUi8fR6Kjoj6TsNPghCQyvdiRIPG1n3q-GZ3dFBzLQa-s9kAaCgYKAakSARESFQHGX2Mi2FrzTGrHW1wHNAd76hnHHg0177&accessTokenCreationTime=1736374816159\"\n",
              "            frameborder=\"0\"\n",
              "            allowfullscreen\n",
              "            \n",
              "        ></iframe>\n",
              "        "
            ],
            "text/plain": [
              "<IPython.lib.display.IFrame at 0x272cd1aa890>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        }
      ],
      "source": [
        "\n",
        "Map.clearMap()\n",
        "lcms = ee.ImageCollection(\"USFS/GTAC/LCMS/v2023-9\")\n",
        "\n",
        "\n",
        "for product in ll.product_levels.keys():\n",
        "    product_title = product.replace('_',' ')\n",
        "    lc = lcms.select([product])\n",
        "    isFirst = True\n",
        "    levels = ll.product_levels[product]\n",
        "    \n",
        "    for level in levels:\n",
        "        remap_dict = ll.getLevelNRemap(level, bandName=product)\n",
        "        lcT = lc.map(lambda img: img.remap(remap_dict[\"remap_from\"], remap_dict[\"remap_to\"]).rename([product]).set(remap_dict[\"viz_dict\"])) # Crosswalk and set symbology\n",
        "        Map.addLayer(lcT, {\"autoViz\": True, \"canAreaChart\": True, \"includeClassValues\": False}, f\"{product_title} Level {level}\", isFirst) # Visualize output\n",
        "        isFirst = False\n",
        "\n",
        "Map.setCenter(-111.83856, 40.73678, 11)\n",
        "Map.turnOnAutoAreaCharting()\n",
        "Map.view()\n"
      ]
    }
  ],
  "metadata": {
    "kernelspec": {
      "display_name": "Python 3 (ipykernel)",
      "language": "python",
      "name": "python3"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.11.4"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}
